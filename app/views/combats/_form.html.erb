
<%= form_with(model: combat, method: method) do |form| %>
  <% if combat.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(combat.errors.count, "error") %> prohibited this combat from being saved:</h2>
      <ul>
        <% combat.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="row g-3 align-items-center">
    <div class="col-sm-2">
      <%= form.label :combat_name%>
    </div> 
    <div class="col-sm-4">
      <%= form.text_field :combat_name, class: "form-control" %>
    </div>  
  </div>
<br>
 <div class="row g-3 align-items-center">
    <div class="col-sm-3">
      <%= form.label :description %>
    </div> 
  </div>
  <div class="row g-3 align-items-center">
    <div class="col-sm-6">
    <%= form.text_field :description, class: "form-control" %>
    </div>
  </div>  

  <%= form.number_field :user_id, class: "form-control", step: 0.5, value: current_user.id, type: :hidden %>
  <br>
  <!-- Button trigger modal -->
  <button type="button" class="btn btn-primary float-right" data-toggle="modal" data-target="#exampleModalCenter">
    +
  </button>
  <br>

  <br>
  <table class="table table-hover table-bordered">
    <thead class="table-dark">
      <tr>
        <th scope="col">Combatant Name 4</th>
        <th scope="col">Combatant Brief Description</th>
        <th scope="col">Combatant Level or CR</th>
        <th scope="col"></th>
      </tr>
    </thead>
    <tbody id="combat_form_combatants_table_body">
      <% cic_index = 0 %>
      <%= form.fields_for :combatants_in_combat do |cic_form| %>
        <%= cic_form.number_field :user_id, class: "form-control", step: 0.5, value: current_user.id, type: :hidden %>  
        <%= cic_form.number_field :id, class: "form-control", step: 0.5, value: cic_form.object.id, type: :hidden %> 
        <% combatant = (cic_form.object).combatant %>
        <tr id="cic-<%= cic_index %>"> 
          <td><%= combatant.formated_name %> </td>
          <td><%= combatant.description %></td>
          <td><%= combatant.cr_or_level %></td>
          <td><div data-index="<%= cic_index %>" class="cic-remove-button btn btn-outline-danger">x</div></td>
        </tr>
        <% cic_index += 1 %>
      <% end %>
    </tbody>
  </table>
  <br>
  <div>
    <%= form.submit "Submit", class: "btn btn-outline-secondary" %>
  </div>

  <%= render("shared/combatants_selector_modal", form: form) %>
<% end %>



<script>
  
  function removeCic (e) {
    let rowIndex = e.target.dataset.index
    let tableRow = document.getElementById(`cic-${rowIndex}`)
    tableRow.style.display = "none";
    tableRow.innerHTML += `
      <input name="combat[combatants_in_combat_attributes[${rowIndex}][_destroy]]" type="hidden" value="1" autocomplete="off">`
  }



  function combatantsConfirmModalButtonClick(e) {
    selectedCombatants = gatherCheckedCombatants();
    addSelectedCombatants(selectedCombatants);
  }

  function buildSelectedCombatantsHTML(selectedCombatants) {
    selectedCombatantsHTML = "";
    let userId;
    let combatantId;
    let selectedCombatant;
    let cicTable = document.getElementById("combat_form_combatants_table_body");
    for (var i = 0; i < selectedCombatants.length; i++) {
      selectedCombatant = selectedCombatants[i];
      combatantId = selectedCombatant['combatantId'];
      userId = document.getElementById("combat_user_id").value;
      selectedCombatantsHTML += `
        <tr data-id="${combatantId}" id="cic-${cicIndex}">
          <td style = "display:none">
            <input name="combat[combatants_in_combat_attributes[${cicIndex}][combatant_id]]" type="hidden" value="${combatantId}" autocomplete="off">
            <input name="combat[combatants_in_combat_attributes[${cicIndex}][user_id]]" type="hidden" value="${userId}" autocomplete="off">
          </td>
          <td>${selectedCombatant["name"]}</td>
          <td>${selectedCombatant["description"]}</td>
          <td>${selectedCombatant["crOrLevel"]}</td>
          <td><div data-index="${cicIndex}" class="cic-remove-button btn btn-outline-danger">x</div></td>
        </tr>`
      cicIndex++;
    }
    return selectedCombatantsHTML;
  }

  function addSelectedCombatants(selectedCombatants) {
    let tableBody = document.getElementById("combat_form_combatants_table_body");
    newHtml = buildSelectedCombatantsHTML(selectedCombatants);
    tableBody.innerHTML += newHtml;
    deleteButtonEventListeners();
  }

  function gatherCheckedCombatants() {
    let modalTableBody = document.getElementById("combatant_selector_modal_table_body");
    let modalTableRows = modalTableBody.children;
    let selectedCombatants = [];
    let row;
    let combatantId;
    let name;
    let description;
    let crOrLevel;
    let checked;
    let howMany;
    for (var i = 0; i < modalTableRows.length; i++) { 
      row = modalTableRows[i];
      combatantId = row.dataset.id;
      name = row.dataset.name;
      description = row.dataset.description || '';
      crOrLevel = row.dataset.crOrLevel || '';
      checked = document.getElementById("combatant_" + combatantId + "_selected").checked;
      howMany = document.getElementById(`combat_combatant_instances[${combatantId}]`).value;
      if (!checked) { continue ; }
      for (var j = 0; j < howMany ; j++){
        tableIndex = i + j + cicIndex + 1 
        selectedCombatants.push({
          "combatantId": combatantId,
          "checked": checked,
          "name": name,
        "description": description,
        "crOrLevel": crOrLevel,
        })
      }
    }
    return selectedCombatants;
  }

  function deleteButtonEventListeners(){
    let deleteButtons = document.getElementsByClassName("cic-remove-button");
    for (var i = 0; i < deleteButtons.length; i++) { 
      deleteButtons[i].addEventListener("click",removeCic);
    }
  }
  let confirmButton = document.getElementById("combatants_modal_confirm");
  confirmButton.addEventListener("click", combatantsConfirmModalButtonClick);

  deleteButtonEventListeners();
  
  var cicIndex = <%= @combat.combatants_in_combat.count %>
</script>
